{"ast":null,"code":"var _jsxFileName = \"/Users/ardlanwang/Documents/GitHub/capstoneUI/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const classes = useStyles();\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    //switch state \n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = res => {\n    console.log(res);\n  };\n\n  const googleError = error => {\n    console.log(error);\n    console.log('Google Sign In was unsuccessful. Try again later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: isSignup ? 'Sign Up' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [//function for sigup or sigin, depends on the user state \n          isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Repeat Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"75838698584-uuqrpbp070f2oq7q1vbkc50kn9brkcq7.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 40\n            }, this),\n            variant: \"contained\",\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleError,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"Ob+r9SYZmhCh0zbyYTAXrW6dKXk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/ardlanwang/Documents/GitHub/capstoneUI/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","TextField","useHistory","GoogleLogin","LockOutlinedIcon","useStyles","Input","Icon","initialState","firstName","lastName","email","password","confirmPassword","Auth","isSignup","setIsSignup","showPassword","setShowPassword","classes","handleShowPassword","handleSubmit","handleChange","switchMode","prevIsSignup","googleSuccess","res","console","log","googleError","error","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container, TextField } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport useStyles from './styles';\nimport Input from './Input';\nimport Icon from './icon';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst Auth = () => {\n    const [isSignup, setIsSignup] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const classes = useStyles();\n    \n\n    const handleShowPassword = () => setShowPassword(!showPassword);\n    const handleSubmit = () => {\n    };\n\n    const handleChange = () => {};\n\n    const switchMode = () => {\n        //switch state \n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        setShowPassword(false);\n    }\n\n    const googleSuccess =  (res) => {\n        console.log(res);\n    };\n\n    const googleError = (error) => {\n        console.log(error);\n        console.log('Google Sign In was unsuccessful. Try again later');\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n        <Paper className={classes.paper} elevation={3}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">{ isSignup ? 'Sign Up' : 'Sign In' }</Typography>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container spacing={2}>\n                { //function for sigup or sigin, depends on the user state \n                    isSignup && (\n                    <>\n                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                    </>\n                )}\n                    <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                    <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n                    { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" /> }\n                </Grid>\n                \n\n                <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                { isSignup ? 'Sign Up' : 'Sign In' }\n                </Button>\n\n                <GoogleLogin\n                    clientId=\"75838698584-uuqrpbp070f2oq7q1vbkc50kn9brkcq7.apps.googleusercontent.com\"\n                    render={(renderProps) => (\n                        <Button className={classes.googleButton} \n                            color=\"primary\" \n                            fullWidth \n                            onClick={renderProps.onClick} \n                            disabled={renderProps.disabled} \n                            startIcon={<Icon />} \n                            variant=\"contained\">\n                            Google Sign In\n                        </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleError}\n                        cookiePolicy=\"single_host_origin\"\n                />\n\n                <Grid container justify=\"flex-end\">\n                    <Grid item>\n                    <Button onClick={switchMode}>\n                        { isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\" }\n                    </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    </Container>\n  )\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}