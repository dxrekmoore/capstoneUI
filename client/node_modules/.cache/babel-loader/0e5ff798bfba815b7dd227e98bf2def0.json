{"ast":null,"code":"var _jsxFileName = \"/home/soundmapper/capstoneUI/client/src/components/Map/Basemap.jsx\";\nimport React, { Component } from 'react';\nimport { loadModules } from 'esri-loader';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  url: 'https://js.arcgis.com/4.22/'\n};\nconst styles = {\n  container: {\n    height: '100vh',\n    width: '100vw'\n  },\n  mapDiv: {\n    padding: 10,\n    margin: 0,\n    height: '100%',\n    width: '100%'\n  }\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: ''\n    };\n  }\n\n  componentDidMount() {\n    loadModules(['esri/WebMap', 'esri/views/MapView', 'esri/layers/FeatureLayer', 'esri/widgets/Legend', 'esri/Graphic', 'esri/core/promiseUtils', 'esri/rest/locator', 'esri/geometry/Point'], options).then(_ref => {\n      let [WebMap, MapView, FeatureLayer, Legend, Graphic] = _ref;\n\n      var json = require('./heatmapdata.json'); //const colors = [\"rgba(115, 0, 115, 0)\", \"#820082\", \"#910091\", \"#a000a0\", \"#af00af\", \"#c300c3\", \"#d700d7\", \"#eb00eb\", \"#ff00ff\", \"#ff58a0\", \"#ff896b\", \"#ffb935\", \"#ffea00\"];\n\n\n      var graphics = json.uploads.map(function (upload) {\n        return new Graphic({\n          attributes: {\n            intensity: upload.intensity,\n            ObjectId: upload.id\n          },\n          geometry: {\n            type: \"point\",\n            longitude: upload.longitude,\n            latitude: upload.latitude\n          }\n        });\n      });\n      var featureLayer = new FeatureLayer({\n        source: graphics,\n        objectIdField: \"ObjectId\",\n        fields: [{\n          name: \"ObjectId\",\n          type: \"oid\"\n        }, {\n          name: \"intensity\",\n          type: \"integer\"\n        }],\n        title: \"Intensity of sounds in Kingston \",\n        renderer: {\n          type: \"simple\",\n          // autocasts as new SimpleRenderer()\n          symbol: {\n            type: \"simple-marker\",\n            // autocasts as new SimpleMarkerSymbol()\n            color: [250, 250, 250],\n            outline: {\n              color: [255, 255, 255, .5],\n              width: 0.5\n            },\n            size: 25\n          },\n          visualVariables: [{\n            type: \"color\",\n            field: \"intensity\",\n            stops: [{\n              value: 0,\n              color: [150, 153, 186, 0.5],\n              label: \"Quiet\"\n            }, {\n              value: 100,\n              color: [255, 0, 0, 0.5],\n              label: \"Loud\"\n            }]\n          }]\n          /*type: \"heatmap\",\n          colorStops: [\n            { color: colors[0], ratio: 0 },\n            { color: colors[1], ratio: 0.083 },\n            { color: colors[2], ratio: 0.166 },\n            { color: colors[3], ratio: 0.249 },\n            { color: colors[4], ratio: 0.332 },\n            { color: colors[5], ratio: 0.415 },\n            { color: colors[6], ratio: 0.498 },\n            { color: colors[7], ratio: 0.581 },\n            { color: colors[8], ratio: 0.664 },\n            { color: colors[9], ratio: 0.747 },\n            { color: colors[10], ratio: 0.83 },\n            { color: colors[11], ratio: 0.913 },\n            { color: colors[12], ratio: 1 }\n            ],\n            blurRadius: 7,\n            maxPixelIntensity: 10,\n            minPixelIntensity: 0\n            */\n\n        }\n      });\n      const map = new WebMap({\n        basemap: \"streets-vector\",\n        layers: [featureLayer]\n      });\n      const view = new MapView({\n        container: \"viewDiv\",\n        center: [-76.495, 44.23],\n        scale: 2,\n        zoom: 13,\n        map\n      });\n      view.ui.add(new Legend({\n        view: view,\n        style: 'classic',\n        layout: 'auto'\n      }), \"top-right\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"viewDiv\",\n        style: styles.mapDiv\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/soundmapper/capstoneUI/client/src/components/Map/Basemap.jsx"],"names":["React","Component","loadModules","options","url","styles","container","height","width","mapDiv","padding","margin","Home","constructor","props","state","status","componentDidMount","then","WebMap","MapView","FeatureLayer","Legend","Graphic","json","require","graphics","uploads","map","upload","attributes","intensity","ObjectId","id","geometry","type","longitude","latitude","featureLayer","source","objectIdField","fields","name","title","renderer","symbol","color","outline","size","visualVariables","field","stops","value","label","basemap","layers","view","center","scale","zoom","ui","add","style","layout","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { loadModules } from 'esri-loader';\nimport \"./styles.css\";\n\nconst options = {\n  url: 'https://js.arcgis.com/4.22/'\n};\n\nconst styles =  {\n  container: {\n    height: '100vh',\n    width: '100vw'\n  },\n  mapDiv: {\n    padding: 10,\n    margin: 0,\n    height: '100%',\n    width: '100%'\n  },\n}\n\nclass Home extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: ''\n    }\n  }\n  \n  componentDidMount() {\n    loadModules(['esri/WebMap', 'esri/views/MapView', 'esri/layers/FeatureLayer', 'esri/widgets/Legend','esri/Graphic','esri/core/promiseUtils','esri/rest/locator','esri/geometry/Point'], options)\n    .then(([WebMap, MapView,FeatureLayer,Legend,Graphic]) => {\n      \n      var json = require('./heatmapdata.json');\n      //const colors = [\"rgba(115, 0, 115, 0)\", \"#820082\", \"#910091\", \"#a000a0\", \"#af00af\", \"#c300c3\", \"#d700d7\", \"#eb00eb\", \"#ff00ff\", \"#ff58a0\", \"#ff896b\", \"#ffb935\", \"#ffea00\"];\n      var graphics = json.uploads.map(function (upload) {\n        return new Graphic({\n          attributes: {\n            intensity:upload.intensity,\n            ObjectId: upload.id,\n\n          },\n          geometry: {\n            type: \"point\",\n            longitude: upload.longitude,\n            latitude: upload.latitude\n          },\n        });\n      });\n      var featureLayer = new FeatureLayer({\n        source: graphics,\n        objectIdField: \"ObjectId\",\n        fields: [{\n          name: \"ObjectId\",\n          type: \"oid\"\n          },\n          {\n            name: \"intensity\",\n            type: \"integer\"\n        }],\n        title: \"Intensity of sounds in Kingston \",\n        renderer: {\n          type: \"simple\", // autocasts as new SimpleRenderer()\n          \n          symbol: {\n            type: \"simple-marker\", // autocasts as new SimpleMarkerSymbol()\n            color: [250, 250, 250],\n            outline: {\n              color: [255, 255, 255,.5],\n              width: 0.5\n            },\n            size: 25\n          },\n          \n          visualVariables: [\n            {\n              type: \"color\",\n              field: \"intensity\",\n              stops: [\n                { value: 0, color: [150, 153, 186,0.5], label: \"Quiet\" },\n                { value: 100, color: [255, 0, 0,0.5], label: \"Loud\" }\n              ]\n            }\n          ]\n\n        \n        /*type: \"heatmap\",\n        colorStops: [\n          { color: colors[0], ratio: 0 },\n          { color: colors[1], ratio: 0.083 },\n          { color: colors[2], ratio: 0.166 },\n          { color: colors[3], ratio: 0.249 },\n          { color: colors[4], ratio: 0.332 },\n          { color: colors[5], ratio: 0.415 },\n          { color: colors[6], ratio: 0.498 },\n          { color: colors[7], ratio: 0.581 },\n          { color: colors[8], ratio: 0.664 },\n          { color: colors[9], ratio: 0.747 },\n          { color: colors[10], ratio: 0.83 },\n          { color: colors[11], ratio: 0.913 },\n          { color: colors[12], ratio: 1 }\n          ],\n          blurRadius: 7,\n          maxPixelIntensity: 10,\n          minPixelIntensity: 0\n          */\n        },\n\n        \n      });\n\n        const map = new WebMap({\n          basemap: \"streets-vector\",\n          layers: [ featureLayer ]\n        });\n\n        const view = new MapView({\n          container: \"viewDiv\",\n          center: [-76.495, 44.23],\n          scale: 2,\n          zoom:13,\n          map\n        });\n        \n        view.ui.add(new Legend({\n          view: view,\n          style: 'classic',\n          layout: 'auto'\n        }),\"top-right\");\n        });\n  }\n\n\n  render() {\n    return(\n          <div style={styles.container}>\n            <div id='viewDiv' style={ styles.mapDiv }>\n            </div>\n          </div>\n    )\n  }\n} \n\nexport default Home "]},"metadata":{},"sourceType":"module"}