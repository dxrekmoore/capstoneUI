{"ast":null,"code":"var _jsxFileName = \"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\n/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Divider } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionActions, AccordionDetails, AccordionSummary } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Geocodio from 'geocodio-library-node';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record, { mp3file, lat, long } from '../Record/record';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar audioFile = mp3file;\nvar base64Audio = '';\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    location: '',\n    latitude: '',\n    longitude: '',\n    message: '',\n    environment: '',\n    phone_type: '',\n    decibel: '',\n    selectedFile: ''\n  }); //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [isLocation, setIsLocation] = useState(true);\n  const [expLat, setExpLat] = useState(0);\n  const [expLng, setExpLng] = useState(0);\n  const geocoder = new Geocodio('2e2d299326224a225d9e64239d982e522394569'); //geocoding the location from the address to latitude and longitude \n\n  const geocodLatLng = address => {\n    geocoder.geocode(address).then(response => {\n      setPostData({ ...postData,\n        latitude: response.results[0].location.lat,\n        longitude: response.results[0].location.lng\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }; //converse addre -> lat and lng \n\n\n  const handleTranLatLon = () => {\n    var addr = postData.location;\n    var address = addr + ',Kingston, ON, CANADA';\n    setIsLocation(false);\n    geocodLatLng(address);\n  };\n\n  const geoReverse = (latitude, longitude) => {\n    const coor = latitude + ',' + longitude;\n    geocoder.reverse(coor, [], 1).then(response => {\n      setPostData({ ...postData,\n        location: response.results[0].formatted_address\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const handleTranAddress = () => {\n    var lat = postData.latitude;\n    var lng = postData.longitude;\n    geoReverse(lat, lng);\n    handleTranLatLon();\n  }; //convert audio to base64\n\n\n  const getBase64 = file => {\n    return new Promise(resolve => {\n      let fileInfo;\n      let baseURL = \"\";\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n        setPostData({ ...postData,\n          selectedFile: baseURL\n        });\n      };\n    });\n  }; //save recording \n\n\n  const saveFile = () => {\n    expLat = lat;\n    console.log('lat');\n    console.log(lat);\n    expLng = long;\n    setPostData({ ...postData,\n      latitude: expLng\n    });\n    console.log('updated');\n    console.log(postData.latitude);\n    audioFile = mp3file;\n    getBase64(audioFile);\n  };\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]); //when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      location: '',\n      latitude: '',\n      longitude: '',\n      message: '',\n      environment: '',\n      phone_type: '',\n      decibel: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n\n    if (currentId === null || currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to upload your own audios.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  } //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 23\n          }, this),\n          \"aria-controls\": \"panel1a-content\",\n          id: \"panel1a-header\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"location\",\n            variant: \"outlined\",\n            label: \"Location\",\n            fullWidth: true,\n            value: postData.location,\n            onChange: e => setPostData({ ...postData,\n              location: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            variant: \"outlined\",\n            label: \"latitude\",\n            fullWidth: true,\n            value: postData.latitude,\n            onChange: e => setPostData({ ...postData,\n              latitude: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField //required\n          , {\n            variant: \"outlined\",\n            label: \"longtitude\",\n            fullWidth: true,\n            value: postData.longitude,\n            onChange: e => setPostData({ ...postData,\n              longitude: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: handleTranAddress,\n        fullWidth: true,\n        children: \"Geocode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Additional Information\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"environment\",\n        variant: \"outlined\",\n        label: \"Environment (indoor/outdoor)\",\n        fullWidth: true,\n        value: postData.environment,\n        onChange: e => setPostData({ ...postData,\n          environment: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"phone_type\",\n        variant: \"outlined\",\n        label: \"Phone type\",\n        fullWidth: true,\n        value: postData.phone_type,\n        onChange: e => setPostData({ ...postData,\n          phone_type: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"decibel\",\n        variant: \"outlined\",\n        label: \"Decibel Value\",\n        fullWidth: true,\n        value: postData.decibel,\n        onChange: e => setPostData({ ...postData,\n          decibel: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.recording,\n      children: [/*#__PURE__*/_jsxDEV(Record, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: saveFile,\n        fullWidth: true,\n        children: \"Save Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"z+q6UZ8Fn3xqKYRc2UTgQJ3YFVQ=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","Divider","useDispatch","useSelector","FileBase","Accordion","AccordionActions","AccordionDetails","AccordionSummary","ExpandMoreIcon","Geocodio","useStyles","createPost","updatePost","Record","mp3file","lat","long","audioFile","base64Audio","Form","currentId","setCurrentId","postData","setPostData","location","latitude","longitude","message","environment","phone_type","decibel","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","isLocation","setIsLocation","expLat","setExpLat","expLng","setExpLng","geocoder","geocodLatLng","address","geocode","then","response","results","lng","catch","err","console","error","handleTranLatLon","addr","geoReverse","coor","reverse","formatted_address","handleTranAddress","getBase64","file","Promise","resolve","fileInfo","baseURL","reader","FileReader","readAsDataURL","onload","result","saveFile","log","clear","handleSubmit","e","preventDefault","name","paper","root","form","title","target","value","split","fileInput","base64","buttonSubmit","recording"],"mappings":"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","sourcesContent":["/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Divider } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionActions, AccordionDetails,AccordionSummary } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Geocodio from 'geocodio-library-node';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record, {mp3file, lat, long} from '../Record/record'\n\nvar audioFile = mp3file;\nvar base64Audio = '';\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const [isLocation, setIsLocation] = useState(true);\n  const [expLat, setExpLat] = useState(0);\n  const [expLng, setExpLng] = useState(0);\n\n  \n  const geocoder = new Geocodio('2e2d299326224a225d9e64239d982e522394569');\n  //geocoding the location from the address to latitude and longitude \n\n  const geocodLatLng = (address) => {\n    geocoder.geocode(address)\n    .then(response => {\n      setPostData({ ...postData, latitude: response.results[0].location.lat ,longitude: response.results[0].location.lng });\n    })\n    .catch(err => {\n        console.error(err);\n      }\n    );\n  };\n\n  //converse addre -> lat and lng \n  const handleTranLatLon = () => {\n    var addr = postData.location;\n    var address = addr + ',Kingston, ON, CANADA'\n    setIsLocation(false);\n    geocodLatLng(address);\n  }\n\n  const geoReverse = (latitude, longitude) => {\n    const coor = latitude + ',' + longitude;\n    geocoder.reverse(coor, [], 1)\n    .then(response => {\n      setPostData({ ...postData, location: response.results[0].formatted_address });\n    })\n    .catch(err => {\n      console.error(err);\n    }\n  );\n  }\n\n  const handleTranAddress = () => {\n    var lat = postData.latitude;\n    var lng = postData.longitude;\n    geoReverse(lat,lng);\n    handleTranLatLon();\n  }\n\n  //convert audio to base64\n  const getBase64 = (file) => {\n    return new Promise(resolve => {\n      let fileInfo;\n      let baseURL = \"\";\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n\n      setPostData({ ...postData, selectedFile: baseURL }) \n      };  \n    });\n  };\n\n  //save recording \n  const saveFile = () => {\n    expLat = lat;\n    console.log('lat');\n    console.log(lat);\n    expLng = long;\n    setPostData({ ...postData, latitude: expLng })\n    console.log('updated');\n    console.log(postData.latitude);\n    audioFile = mp3file;\n    getBase64(audioFile);\n\n  };\n\n\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);//when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n    if (currentId === null || currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to upload your own audios.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'}</Typography>\n        <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        > \n\n        <TextField \n          name=\"location\" variant=\"outlined\" label=\"Location\" fullWidth \n          value={postData.location} \n          onChange={(e) => setPostData({ ...postData, location: e.target.value })}\n        /> \n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField \n            variant=\"outlined\" \n            label=\"latitude\" fullWidth\n            value={postData.latitude} \n            onChange={(e) => setPostData({ ...postData, latitude: e.target.value })}\n          />\n\n          <TextField \n            //required\n            variant=\"outlined\" \n            label=\"longtitude\" fullWidth\n            value={postData.longitude} \n            onChange={(e) => setPostData({ ...postData, longitude: e.target.value })}\n          />\n        </AccordionDetails>\n      </Accordion>\n\n\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleTranAddress} fullWidth>Geocode</Button>\n        \n        <TextField \n          name=\"message\" variant=\"outlined\" label=\"Additional Information\" fullWidth multiline rows={4} value={postData.message} \n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField \n          name=\"environment\" variant=\"outlined\"  label=\"Environment (indoor/outdoor)\" fullWidth value={postData.environment} \n          onChange={(e) => setPostData({ ...postData, environment: e.target.value.split(',') })} \n        />\n        <TextField \n          name=\"phone_type\" variant=\"outlined\" label=\"Phone type\" fullWidth value={postData.phone_type} \n          onChange={(e) => setPostData({ ...postData, phone_type: e.target.value })} \n        />\n        <TextField \n          name=\"decibel\" \n          variant=\"outlined\" \n          label=\"Decibel Value\" \n          fullWidth value={postData.decibel} \n          onChange={(e) => setPostData({ ...postData, decibel: e.target.value })} \n        />\n        <div className={classes.fileInput}>\n            <FileBase \n                type=\"file\" \n                multiple={false} \n                onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} \n            />\n        </div>\n        \n\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n\n      <div className={classes.recording}>\n      <Record/>\n\n      <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={saveFile} fullWidth>Save Audio</Button>\n      </div>\n      \n    </Paper>\n    \n  );\n  \n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}