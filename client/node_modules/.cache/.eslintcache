[{"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/index.js":"1","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/App.js":"2","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/index.js":"3","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/App.js":"4","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/pages/home.js":"5","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Navbar.jsx":"6","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Auth.js":"7","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Map/Basemap.jsx":"8","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/posts.js":"9","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/auth.js":"10","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/styles.js":"11","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/posts.js":"12","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/styles.js":"13","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/auth.js":"14","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Input.js":"15","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/icon.js":"16","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/styles.js":"17","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Posts.js":"18","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/Form.js":"19","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/constants/actionTypes.js":"20","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/api/index.js":"21","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/styles.js":"22","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/styles.js":"23","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Record/record.js":"24","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/Post.js":"25","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/styles.js":"26"},{"size":753,"mtime":1648619334132,"results":"27","hashOfConfig":"28"},{"size":729,"mtime":1648619323329,"results":"29","hashOfConfig":"28"},{"size":203,"mtime":1648618326164,"results":"30","hashOfConfig":"28"},{"size":1579,"mtime":1648618326155,"results":"31","hashOfConfig":"28"},{"size":471,"mtime":1648618326140,"results":"32","hashOfConfig":"28"},{"size":2052,"mtime":1648618477006,"results":"33","hashOfConfig":"28"},{"size":4654,"mtime":1648619363486,"results":"34","hashOfConfig":"28"},{"size":3784,"mtime":1648618476997,"results":"35","hashOfConfig":"28"},{"size":845,"mtime":1648618326164,"results":"36","hashOfConfig":"28"},{"size":525,"mtime":1648618326164,"results":"37","hashOfConfig":"28"},{"size":487,"mtime":1648618326164,"results":"38","hashOfConfig":"28"},{"size":1701,"mtime":1648618326156,"results":"39","hashOfConfig":"28"},{"size":925,"mtime":1648618326140,"results":"40","hashOfConfig":"28"},{"size":558,"mtime":1648618326156,"results":"41","hashOfConfig":"28"},{"size":989,"mtime":1648618326136,"results":"42","hashOfConfig":"28"},{"size":501,"mtime":1648618326136,"results":"43","hashOfConfig":"28"},{"size":637,"mtime":1648618326137,"results":"44","hashOfConfig":"28"},{"size":913,"mtime":1648618326158,"results":"45","hashOfConfig":"28"},{"size":7437,"mtime":1648618477008,"results":"46","hashOfConfig":"28"},{"size":222,"mtime":1648618326161,"results":"47","hashOfConfig":"28"},{"size":962,"mtime":1648668653561,"results":"48","hashOfConfig":"28"},{"size":465,"mtime":1648618477010,"results":"49","hashOfConfig":"28"},{"size":1339,"mtime":1648618326159,"results":"50","hashOfConfig":"28"},{"size":3583,"mtime":1648618477013,"results":"51","hashOfConfig":"28"},{"size":3852,"mtime":1648618326158,"results":"52","hashOfConfig":"28"},{"size":962,"mtime":1648618326158,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1uw02z",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"57"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"57"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/index.js",[],[],["137","138"],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/App.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/index.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/App.js",["139"],[],"/*this will be the base app interface,\nto run this, type command npm start in the client folder terminal*/\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\n\n//use hook, which makes redux easier, this allows us to dispatch an action \nimport { useDispatch } from 'react-redux';\n// dispatch the action\nimport React, { useState, useEffect } from 'react';\n//actions which will be used in dispatch field \nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport { getPosts } from './actions/posts';\n\n//this is the logo picture filed \nimport useStyles  from './styles'\n\nconst App = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();// a hook \n    const [currentId, setCurrentId] = useState(null);\n    \n    useEffect(() => {\n        dispatch(getPosts());\n      }, [currentId, dispatch]);//make sure the change can be applied immediately\n\n    return(\n        <Container maxWidth=\"lg\">\n            <AppBar className={classes.appBar} position='static' color='inherit'>\n\n            </AppBar>\n            <Grow in>\n        <Container>\n          <Grid className={classes.mainContainer}container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n\n\n","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/pages/home.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Navbar.jsx",["140"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation  } from 'react-router-dom';\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst NavBar = () =>{\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  \r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    history.push('/');\r\n    setUser(null);\r\n  };\r\n\r\n  console.log(user);\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n    \r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <div class=\"logo\">SoundScape Mapper</div>\r\n        <ul class=\"nav-links\">\r\n          <input type=\"checkbox\" id=\"checkbox_toggle\" />\r\n          <label for=\"checkbox_toggle\" class=\"hamburger\">&#9776;</label>\r\n          <div class=\"menu\">\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/upload\">Upload</Link></li>\r\n\r\n            <div >\r\n              {user?.result ? (\r\n                <div className={classes.profile}>\r\n                  \r\n                  <Typography className={classes.userName} variant=\"h9\">{user?.result.name}</Typography>\r\n                  <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n                </div>\r\n              ) : (\r\n                <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n              )}\r\n      </div>\r\n          </div>\r\n          \r\n        </ul>\r\n        \r\n        \r\n          \r\n      </nav>\r\n\r\n    </div>   \r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n        ","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Auth.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Map/Basemap.jsx",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/posts.js",["141"],[],"/*a reducer is a function, that accpets states or actions in the website, \nand it can do the corresponded actions */\n\n\n//add more actions here\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case 'FETCH_ALL':\n      return action.payload;\n    case 'CREATE':\n      return [...posts, action.payload];\n    case 'UPDATE':\n      //posts.map will return an array => we mapping post the array, and we make change in there, and it return the changed array\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));//  action.payload is the updated post\n    case 'DELETE':\n      return posts.filter((post) => post._id !== action.payload);  \n    default:\n      return posts;\n    case 'LIKE':\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n      \n  }\n};\n\n","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/auth.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/posts.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/auth.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Input.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/icon.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Posts.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/Form.js",["142","143","144","145","146","147","148"],[],"/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper, Divider } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionActions, AccordionDetails,AccordionSummary } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Geocodio from 'geocodio-library-node';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record, {mp3file, lat, long} from '../Record/record'\n\nvar audioFile = mp3file;\nvar base64Audio = '';\nvar expLat;\nvar expLng;\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const [isLocation, setIsLocation] = useState(true);\n\n  \n  const geocoder = new Geocodio('2e2d299326224a225d9e64239d982e522394569');\n  //geocoding the location from the address to latitude and longitude \n\n  const geocodLatLng = (address) => {\n    geocoder.geocode(address)\n    .then(response => {\n      setPostData({ ...postData, latitude: response.results[0].location.lat ,longitude: response.results[0].location.lng });\n    })\n    .catch(err => {\n        console.error(err);\n      }\n    );\n  };\n\n  //converse addre -> lat and lng \n  const handleTranLatLon = () => {\n    var addr = postData.location;\n    var address = addr + ',Kingston, ON, CANADA'\n    setIsLocation(false);\n    geocodLatLng(address);\n  }\n\n  const geoReverse = (latitude, longitude) => {\n    const coor = latitude + ',' + longitude;\n    geocoder.reverse(coor, [], 1)\n    .then(response => {\n      setPostData({ ...postData, location: response.results[0].formatted_address });\n    })\n    .catch(err => {\n      console.error(err);\n    }\n  );\n  }\n\n  const handleTranAddress = () => {\n    var lat = postData.latitude;\n    var lng = postData.longitude;\n    geoReverse(lat,lng);\n    handleTranLatLon();\n  }\n\n  //convert audio to base64\n  const getBase64 = (file) => {\n    return new Promise(resolve => {\n      let fileInfo;\n      let baseURL = \"\";\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n\n      setPostData({ ...postData, selectedFile: baseURL }) \n      };  \n    });\n  };\n\n  //save recording \n  const saveFile = () => {\n    expLat = lat;\n    expLng = long;\n    setPostData({ ...postData, latitude: lat, longitude: long })\n    audioFile = mp3file;\n    getBase64(audioFile);\n\n  };\n\n\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);//when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n    if (currentId === null || currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to upload your own audios.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'}</Typography>\n        <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        > \n\n        <TextField \n          name=\"location\" variant=\"outlined\" label=\"Location\" fullWidth \n          value={postData.location} \n          onChange={(e) => setPostData({ ...postData, location: e.target.value })}\n        /> \n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField \n            variant=\"outlined\" \n            label=\"latitude\" fullWidth\n            value={postData.latitude} \n            onChange={(e) => setPostData({ ...postData, latitude: e.target.value })}\n          />\n\n          <TextField \n            //required\n            variant=\"outlined\" \n            label=\"longtitude\" fullWidth\n            value={postData.longitude} \n            onChange={(e) => setPostData({ ...postData, longitude: e.target.value })}\n          />\n        </AccordionDetails>\n      </Accordion>\n\n\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleTranAddress} fullWidth>Geocode</Button>\n        \n        <TextField \n          name=\"message\" variant=\"outlined\" label=\"Additional Information\" fullWidth multiline rows={4} value={postData.message} \n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField \n          name=\"environment\" variant=\"outlined\"  label=\"Environment (indoor/outdoor)\" fullWidth value={postData.environment} \n          onChange={(e) => setPostData({ ...postData, environment: e.target.value.split(',') })} \n        />\n        <TextField \n          name=\"phone_type\" variant=\"outlined\" label=\"Phone type\" fullWidth value={postData.phone_type} \n          onChange={(e) => setPostData({ ...postData, phone_type: e.target.value })} \n        />\n        <TextField \n          name=\"decibel\" \n          variant=\"outlined\" \n          label=\"Decibel Value\" \n          fullWidth value={postData.decibel} \n          onChange={(e) => setPostData({ ...postData, decibel: e.target.value })} \n        />\n        <div className={classes.fileInput}>\n            <FileBase \n                type=\"file\" \n                multiple={false} \n                onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} \n            />\n        </div>\n        \n\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n\n      <div className={classes.recording}>\n      <Record/>\n\n      <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={saveFile} fullWidth>Save Audio</Button>\n      </div>\n      \n    </Paper>\n    \n  );\n  \n};\n\nexport default Form;\n","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/constants/actionTypes.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/api/index.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Record/record.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/Post.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/styles.js",[],[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":3,"column":29,"nodeType":"155","messageId":"156","endLine":3,"endColumn":39},{"ruleId":"157","severity":1,"message":"158","line":35,"column":6,"nodeType":"159","endLine":35,"endColumn":16,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":6,"column":1,"nodeType":"163","endLine":23,"endColumn":3},{"ruleId":"153","severity":1,"message":"164","line":6,"column":48,"nodeType":"155","messageId":"156","endLine":6,"endColumn":55},{"ruleId":"153","severity":1,"message":"165","line":9,"column":21,"nodeType":"155","messageId":"156","endLine":9,"endColumn":37},{"ruleId":"153","severity":1,"message":"166","line":18,"column":5,"nodeType":"155","messageId":"156","endLine":18,"endColumn":16},{"ruleId":"153","severity":1,"message":"167","line":19,"column":5,"nodeType":"155","messageId":"156","endLine":19,"endColumn":11},{"ruleId":"153","severity":1,"message":"168","line":20,"column":5,"nodeType":"155","messageId":"156","endLine":20,"endColumn":11},{"ruleId":"153","severity":1,"message":"169","line":31,"column":10,"nodeType":"155","messageId":"156","endLine":31,"endColumn":20},{"ruleId":"153","severity":1,"message":"170","line":78,"column":11,"nodeType":"155","messageId":"156","endLine":78,"endColumn":19},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["173"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Divider' is defined but never used.","'AccordionActions' is defined but never used.","'base64Audio' is assigned a value but never used.","'expLat' is assigned a value but never used.","'expLng' is assigned a value but never used.","'isLocation' is assigned a value but never used.","'fileInfo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"176","text":"177"},[942,952],"[location, logout, user?.token]"]