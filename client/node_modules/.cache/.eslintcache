[{"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/index.js":"1","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/App.js":"2","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/reducers/index.js":"3","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/App.js":"4","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/pages/home.js":"5","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Navbar.jsx":"6","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/Auth.js":"7","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Map/Basemap.jsx":"8","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/reducers/auth.js":"9","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/reducers/posts.js":"10","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/styles.js":"11","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/actions/posts.js":"12","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/styles.js":"13","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/Input.js":"14","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/styles.js":"15","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/actions/auth.js":"16","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/icon.js":"17","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/Posts.js":"18","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Form/Form.js":"19","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/constants/actionTypes.js":"20","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/api/index.js":"21","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/styles.js":"22","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/Post/Post.js":"23","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Record/record.js":"24","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Form/styles.js":"25","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/Post/styles.js":"26"},{"size":753,"mtime":1648677023847,"results":"27","hashOfConfig":"28"},{"size":729,"mtime":1648677023846,"results":"29","hashOfConfig":"28"},{"size":203,"mtime":1648677023850,"results":"30","hashOfConfig":"28"},{"size":1567,"mtime":1648677023848,"results":"31","hashOfConfig":"28"},{"size":471,"mtime":1648677023847,"results":"32","hashOfConfig":"28"},{"size":2052,"mtime":1648677023847,"results":"33","hashOfConfig":"28"},{"size":4654,"mtime":1648677023846,"results":"34","hashOfConfig":"28"},{"size":3784,"mtime":1648677023847,"results":"35","hashOfConfig":"28"},{"size":525,"mtime":1648677023849,"results":"36","hashOfConfig":"28"},{"size":844,"mtime":1648677023850,"results":"37","hashOfConfig":"28"},{"size":487,"mtime":1648677023850,"results":"38","hashOfConfig":"28"},{"size":1701,"mtime":1648677023848,"results":"39","hashOfConfig":"28"},{"size":925,"mtime":1648677023847,"results":"40","hashOfConfig":"28"},{"size":989,"mtime":1648677023846,"results":"41","hashOfConfig":"28"},{"size":637,"mtime":1648677023846,"results":"42","hashOfConfig":"28"},{"size":558,"mtime":1648677023848,"results":"43","hashOfConfig":"28"},{"size":501,"mtime":1648677023846,"results":"44","hashOfConfig":"28"},{"size":913,"mtime":1648677023849,"results":"45","hashOfConfig":"28"},{"size":7483,"mtime":1648679492138,"results":"46","hashOfConfig":"28"},{"size":222,"mtime":1648677023849,"results":"47","hashOfConfig":"28"},{"size":993,"mtime":1648677023848,"results":"48","hashOfConfig":"28"},{"size":1339,"mtime":1648677023849,"results":"49","hashOfConfig":"28"},{"size":3833,"mtime":1648679339218,"results":"50","hashOfConfig":"28"},{"size":3312,"mtime":1648677023849,"results":"51","hashOfConfig":"28"},{"size":465,"mtime":1648679060126,"results":"52","hashOfConfig":"28"},{"size":962,"mtime":1648677023849,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9v8598",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/index.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/App.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/reducers/index.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/App.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/pages/home.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Navbar.jsx",["135"],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/Auth.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Map/Basemap.jsx",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/reducers/auth.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/reducers/posts.js",["136"],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/styles.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/actions/posts.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/styles.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/Input.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/styles.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/actions/auth.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/components/Auth/icon.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/Posts.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Form/Form.js",["137"],[],"/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionDetails,AccordionSummary,Grid, grid } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Geocodio from 'geocodio-library-node';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record, {mp3file, lat, long} from '../Record/record'\n\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n  var audioFile = mp3file;\n\n  const [postData, setPostData] = useState({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  \n  const geocoder = new Geocodio('2e2d299326224a225d9e64239d982e522394569');\n  //geocoding the location from the address to latitude and longitude \n\n  const geocodLatLng = (address) => {\n    geocoder.geocode(address)\n    .then(response => {\n      setPostData({ ...postData, latitude: response.results[0].location.lat ,longitude: response.results[0].location.lng });\n    })\n    .catch(err => {\n        console.error(err);\n      }\n    );\n  };\n\n  //converse address -> lat and lng \n  const handleTranLatLon = () => {\n    var addr = postData.location;\n    var address = addr + ',Kingston, ON, CANADA'\n    geocodLatLng(address);\n  }\n\n  const geoReverse = (latitude, longitude) => {\n    const coor = latitude + ',' + longitude;\n    geocoder.reverse(coor, [], 1)\n    .then(response => {\n      setPostData({ ...postData, location: response.results[0].formatted_address });\n    })\n    .catch(err => {\n      console.error(err);\n    }\n  );\n  }\n\n  const handleTranAddress = () => {\n    var lati = postData.latitude;\n    var lngi = postData.longitude;\n    geoReverse(lati,lngi);\n    handleTranLatLon();\n  }\n\n  //convert audio to base64\n  const getBase64 = (file) => {\n    return new Promise(resolve => {\n      let baseURL = \"\";\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n      setPostData({ ...postData, selectedFile: baseURL }) \n      };  \n    });\n  };\n\n  //get location when you recording\n  const setLocation = () => {\n      const lati = lat+'';\n      const longi = long+'';\n      console.log(longi);\n      setPostData({ ...postData, latitude: lati, longitude: longi }); \n      console.log(postData.latitude);\n  }\n\n  //save recording \n  const saveFile = () => {\n    audioFile = mp3file;\n    getBase64(audioFile);\n  };\n\n\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);//when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n    if (currentId === null || currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  //user must be logged in to submit the form\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to upload your own audios.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'}</Typography>\n        <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        > \n\n        <TextField \n          name=\"location\" variant=\"outlined\" label=\"Address\" fullWidth \n          value={postData.location} \n          onChange={(e) => setPostData({ ...postData, location: e.target.value })}\n        /> \n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField \n            variant=\"outlined\" label=\"Latitude\" fullWidth value={postData.latitude} \n            onChange={(e) => setPostData({ ...postData, latitude: e.target.value })}\n          />\n\n          <TextField \n            //required\n            variant=\"outlined\" label=\"Longtitude\" fullWidth\n            value={postData.longitude} \n            onChange={(e) => setPostData({ ...postData, longitude: e.target.value })}\n          />\n        </AccordionDetails>\n      </Accordion>\n\n\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleTranAddress} fullWidth>Convert address</Button>\n        \n        \n        <TextField \n          name=\"environment\" variant=\"outlined\"  label=\"Environment (indoor/outdoor)\" fullWidth value={postData.environment} \n          onChange={(e) => setPostData({ ...postData, environment: e.target.value.split(',') })} \n        />\n        <TextField \n          name=\"phone_type\" variant=\"outlined\" label=\"Device type\" fullWidth value={postData.phone_type} \n          onChange={(e) => setPostData({ ...postData, phone_type: e.target.value })} \n        />\n        <TextField \n          name=\"message\" variant=\"outlined\" label=\"Additional Information\" fullWidth multiline rows={1} value={postData.message} \n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n\n        <div className={classes.fileInput}>\n            <FileBase \n                type=\"file\" \n                multiple={false} \n                onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} \n            />\n        </div>\n        \n\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n\n      <div className={classes.recording}>\n      <Record/>\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={saveFile} fullWidth>Save Audio</Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={setLocation} fullWidth>Get Location</Button> \n        </Grid>\n      </Grid>\n      \n      </div>\n      \n    </Paper>\n    \n  );\n  \n};\n\nexport default Form;\n","/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/constants/actionTypes.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/api/index.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/styles.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/Post/Post.js",["138"],[],"/* this page will be used to reflect the posts made by users \nthe posts will be refelcted to the frontend with user input information\n\nthis file will be used by client/src/components/Posts/Posts.js\n*/\nimport React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\n\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId}) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\n        ? (\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\n        ) : (\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n        );\n    }\n\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n  };\n\n  \n  //the card are each of the displayed form \n  //changing on the forms should change this filed  \n  return (\n    \n    <Card className={classes.card}>\n    \n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      \n      <div className={classes.overlay}>\n        \n        <Typography \n          variant=\"h6\"> {post.name}\n        </Typography>\n        \n        <Typography \n          variant=\"body2\"> {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      \n      {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n      <div className={classes.overlay2}>\n        <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n          <MoreHorizIcon fontSize=\"default\" />\n        </Button>\n      </div>\n      )}\n      \n      <div className={classes.details}>\n        <Typography \n          variant=\"body2\" \n          color=\"textSecondary\" \n          component=\"h2\">\n          {post.environment.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      \n      <Typography \n        className={classes.location} gutterBottom variant=\"h9\" component=\"h4\"> Location: { post.location }\n      </Typography>\n      \n      <CardContent>\n        <Typography \n          variant=\"body2\" color=\"textSecondary\" component=\"p\"> Message:{post.message}\n        </Typography>\n      </CardContent>\n\n      <Typography \n        className={classes.phone_type} gutterBottom variant=\"body2\" component=\"p\"> Phone Type: {post.phone_type}\n      </Typography>\n\n      <Typography \n        className={classes.decibel} gutterBottom variant=\"body2\" component=\"p\"> Decibel:{post.decibel}\n      </Typography>\n      \n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\n\n        </Button>\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n        <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n          <DeleteIcon fontSize=\"small\" /> Delete\n        </Button>\n        )}\n      </CardActions>\n    </Card>\n    \n  );\n};\n\n\nexport default Post;\n",["139","140"],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Record/record.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Form/styles.js",[],[],"/Users/alexgadanidis/Desktop/MERG/capstoneUI/client/src/uploading/components/Posts/Post/styles.js",[],[],{"ruleId":"141","severity":1,"message":"142","line":35,"column":6,"nodeType":"143","endLine":35,"endColumn":16,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":1,"nodeType":"147","endLine":22,"endColumn":3},{"ruleId":"148","severity":1,"message":"149","line":9,"column":61,"nodeType":"150","messageId":"151","endLine":9,"endColumn":65},{"ruleId":"148","severity":1,"message":"152","line":23,"column":9,"nodeType":"150","messageId":"151","endLine":23,"endColumn":14},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["157"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'grid' is defined but never used.","Identifier","unusedVar","'Likes' is assigned a value but never used.","no-native-reassign",["158"],"no-negated-in-lhs",["159"],{"desc":"160","fix":"161"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [location, logout, user?.token]",{"range":"162","text":"163"},[942,952],"[location, logout, user?.token]"]