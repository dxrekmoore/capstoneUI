[{"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/index.js":"1","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/App.js":"2","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/index.js":"3","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/App.js":"4","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/pages/home.js":"5","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Navbar.jsx":"6","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Auth.js":"7","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Map/Basemap.jsx":"8","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/posts.js":"9","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/auth.js":"10","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/styles.js":"11","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/posts.js":"12","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/styles.js":"13","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/auth.js":"14","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Input.js":"15","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/icon.js":"16","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/styles.js":"17","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Posts.js":"18","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/Form.js":"19","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/constants/actionTypes.js":"20","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/api/index.js":"21","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/styles.js":"22","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/styles.js":"23","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Record/record.js":"24","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/Post.js":"25","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/styles.js":"26"},{"size":753,"mtime":1648619334132,"results":"27","hashOfConfig":"28"},{"size":729,"mtime":1648619323329,"results":"29","hashOfConfig":"28"},{"size":203,"mtime":1648618326164,"results":"30","hashOfConfig":"28"},{"size":1567,"mtime":1648675060048,"results":"31","hashOfConfig":"28"},{"size":471,"mtime":1648618326140,"results":"32","hashOfConfig":"28"},{"size":2052,"mtime":1648618477006,"results":"33","hashOfConfig":"28"},{"size":4654,"mtime":1648619363486,"results":"34","hashOfConfig":"28"},{"size":3784,"mtime":1648618476997,"results":"35","hashOfConfig":"28"},{"size":844,"mtime":1648675570017,"results":"36","hashOfConfig":"28"},{"size":525,"mtime":1648618326164,"results":"37","hashOfConfig":"28"},{"size":487,"mtime":1648618326164,"results":"38","hashOfConfig":"28"},{"size":1701,"mtime":1648618326156,"results":"39","hashOfConfig":"28"},{"size":925,"mtime":1648618326140,"results":"40","hashOfConfig":"28"},{"size":558,"mtime":1648618326156,"results":"41","hashOfConfig":"28"},{"size":989,"mtime":1648618326136,"results":"42","hashOfConfig":"28"},{"size":501,"mtime":1648618326136,"results":"43","hashOfConfig":"28"},{"size":637,"mtime":1648618326137,"results":"44","hashOfConfig":"28"},{"size":913,"mtime":1648618326158,"results":"45","hashOfConfig":"28"},{"size":7694,"mtime":1648678924607,"results":"46","hashOfConfig":"28"},{"size":222,"mtime":1648618326161,"results":"47","hashOfConfig":"28"},{"size":993,"mtime":1648674883234,"results":"48","hashOfConfig":"28"},{"size":465,"mtime":1648618477010,"results":"49","hashOfConfig":"28"},{"size":1339,"mtime":1648618326159,"results":"50","hashOfConfig":"28"},{"size":3312,"mtime":1648677717458,"results":"51","hashOfConfig":"28"},{"size":3852,"mtime":1648618326158,"results":"52","hashOfConfig":"28"},{"size":962,"mtime":1648618326158,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1uw02z",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/index.js",[],[],["135","136"],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/App.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/index.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/App.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/pages/home.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Navbar.jsx",["137"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory, useLocation  } from 'react-router-dom';\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst NavBar = () =>{\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  \r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    history.push('/');\r\n    setUser(null);\r\n  };\r\n\r\n  console.log(user);\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n    \r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <div class=\"logo\">SoundScape Mapper</div>\r\n        <ul class=\"nav-links\">\r\n          <input type=\"checkbox\" id=\"checkbox_toggle\" />\r\n          <label for=\"checkbox_toggle\" class=\"hamburger\">&#9776;</label>\r\n          <div class=\"menu\">\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/upload\">Upload</Link></li>\r\n\r\n            <div >\r\n              {user?.result ? (\r\n                <div className={classes.profile}>\r\n                  \r\n                  <Typography className={classes.userName} variant=\"h9\">{user?.result.name}</Typography>\r\n                  <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n                </div>\r\n              ) : (\r\n                <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n              )}\r\n      </div>\r\n          </div>\r\n          \r\n        </ul>\r\n        \r\n        \r\n          \r\n      </nav>\r\n\r\n    </div>   \r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n        ","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Auth.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Map/Basemap.jsx",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/posts.js",["138"],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/reducers/auth.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/posts.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/actions/auth.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/Input.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/icon.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/components/Auth/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Posts.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/Form.js",["139"],[],"/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionDetails,AccordionSummary,Grid, grid } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Geocodio from 'geocodio-library-node';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record, {mp3file, lat, long} from '../Record/record'\n\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n  var audioFile = mp3file;\n\n  const [postData, setPostData] = useState({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  \n  const geocoder = new Geocodio('2e2d299326224a225d9e64239d982e522394569');\n  //geocoding the location from the address to latitude and longitude \n\n  const geocodLatLng = (address) => {\n    geocoder.geocode(address)\n    .then(response => {\n      setPostData({ ...postData, latitude: response.results[0].location.lat ,longitude: response.results[0].location.lng });\n    })\n    .catch(err => {\n        console.error(err);\n      }\n    );\n  };\n\n  //converse address -> lat and lng \n  const handleTranLatLon = () => {\n    var addr = postData.location;\n    var address = addr + ',Kingston, ON, CANADA'\n    geocodLatLng(address);\n  }\n\n  const geoReverse = (latitude, longitude) => {\n    const coor = latitude + ',' + longitude;\n    geocoder.reverse(coor, [], 1)\n    .then(response => {\n      setPostData({ ...postData, location: response.results[0].formatted_address });\n    })\n    .catch(err => {\n      console.error(err);\n    }\n  );\n  }\n\n  const handleTranAddress = () => {\n    var lati = postData.latitude;\n    var lngi = postData.longitude;\n    geoReverse(lati,lngi);\n    handleTranLatLon();\n  }\n\n  //convert audio to base64\n  const getBase64 = (file) => {\n    return new Promise(resolve => {\n      let baseURL = \"\";\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        baseURL = reader.result;\n        resolve(baseURL);\n      setPostData({ ...postData, selectedFile: baseURL }) \n      };  \n    });\n  };\n\n  //get location when you recording\n  const setLocation = () => {\n      const lati = lat+'';\n      const longi = long+'';\n      console.log(longi);\n      setPostData({ ...postData, latitude: lati, longitude: longi }); \n      console.log(postData.latitude);\n  }\n\n  //save recording \n  const saveFile = () => {\n    audioFile = mp3file;\n    getBase64(audioFile);\n  };\n\n\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);//when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ location: '', latitude: '', longitude: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n    if (currentId === null || currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  //user must be logged in to submit the form\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to upload your own audios.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'}</Typography>\n        <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        > \n\n        <TextField \n          name=\"location\" variant=\"outlined\" label=\"Location\" fullWidth \n          value={postData.location} \n          onChange={(e) => setPostData({ ...postData, location: e.target.value })}\n        /> \n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField \n            variant=\"outlined\" label=\"latitude\" fullWidth value={postData.latitude} \n            onChange={(e) => setPostData({ ...postData, latitude: e.target.value })}\n          />\n\n          <TextField \n            //required\n            variant=\"outlined\" \n            label=\"longtitude\" fullWidth\n            value={postData.longitude} \n            onChange={(e) => setPostData({ ...postData, longitude: e.target.value })}\n          />\n        </AccordionDetails>\n      </Accordion>\n\n\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={handleTranAddress} fullWidth>Geocode</Button>\n        \n        <TextField \n          name=\"message\" variant=\"outlined\" label=\"Additional Information\" fullWidth multiline rows={4} value={postData.message} \n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField \n          name=\"environment\" variant=\"outlined\"  label=\"Environment (indoor/outdoor)\" fullWidth value={postData.environment} \n          onChange={(e) => setPostData({ ...postData, environment: e.target.value.split(',') })} \n        />\n        <TextField \n          name=\"phone_type\" variant=\"outlined\" label=\"Phone type\" fullWidth value={postData.phone_type} \n          onChange={(e) => setPostData({ ...postData, phone_type: e.target.value })} \n        />\n        <TextField \n          name=\"decibel\" variant=\"outlined\" label=\"Decibel Value\" fullWidth value={postData.decibel} \n          onChange={(e) => setPostData({ ...postData, decibel: e.target.value })} \n        />\n        <div className={classes.fileInput}>\n            <FileBase \n                type=\"file\" \n                multiple={false} \n                onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} \n            />\n        </div>\n        \n\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n\n      <div className={classes.recording}>\n      <Record/>\n\n      <Grid container spacing={2}>\n        <Grid item xs={6}>\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={saveFile} fullWidth>Save Audio</Button>\n        </Grid>\n        <Grid item xs={6}>\n          <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={setLocation} fullWidth>Get Location</Button> \n        </Grid>\n      </Grid>\n      \n      </div>\n      \n    </Paper>\n    \n  );\n  \n};\n\nexport default Form;\n","/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/constants/actionTypes.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/api/index.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Form/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/styles.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Record/record.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/Post.js",[],[],"/Users/ardlanwang/Documents/GitHub/capstoneUI/client/src/uploading/components/Posts/Post/styles.js",[],[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":35,"column":6,"nodeType":"146","endLine":35,"endColumn":16,"suggestions":"147"},{"ruleId":"148","severity":1,"message":"149","line":5,"column":1,"nodeType":"150","endLine":22,"endColumn":3},{"ruleId":"151","severity":1,"message":"152","line":9,"column":61,"nodeType":"153","messageId":"154","endLine":9,"endColumn":65},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["157"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'grid' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"160","text":"161"},[942,952],"[location, logout, user?.token]"]