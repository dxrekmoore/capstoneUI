{"ast":null,"code":"var _jsxFileName = \"/Users/alexgadanidis/Desktop/merging/capstoneUI/src/uploading/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\n/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionActions, AccordionDetails, AccordionSummary } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record from '../Record/record';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction success(pos) {\n  var crd = pos.coords;\n  console.log('Your current position is:');\n  var latitude = crd.latitude;\n  var longitude = crd.longitude;\n  console.log(latitude);\n  console.log(longitude);\n}\n\nfunction error(err) {\n  console.log(error);\n}\n\nconst Form = _ref => {\n  _s();\n\n  var _user$result3;\n\n  let {\n    currentId,\n    setCurrentId\n  } = _ref;\n  const [postData, setPostData] = useState({\n    location: '',\n    message: '',\n    environment: '',\n    phone_type: '',\n    decibel: '',\n    selectedFile: ''\n  }); //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]); //when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      location: '',\n      message: '',\n      environment: '',\n      phone_type: '',\n      decibel: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n\n    if (currentId === null || currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user !== null && user !== void 0 && (_user$result3 = user.result) !== null && _user$result3 !== void 0 && _user$result3.name)) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign In to upload your own audios.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: [/*#__PURE__*/_jsxDEV(Record, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n          expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 23\n          }, this),\n          \"aria-controls\": \"panel1a-content\",\n          id: \"panel1a-header\",\n          children: /*#__PURE__*/_jsxDEV(TextField //disabled\n          , {\n            name: \"location\",\n            variant: \"outlined\",\n            label: \"location\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n          children: [/*#__PURE__*/_jsxDEV(TextField //required\n          , {\n            variant: \"outlined\",\n            label: \"latitude\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField //required\n          , {\n            variant: \"outlined\",\n            label: \"longtitude\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Additional Information\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"environment\",\n        variant: \"outlined\",\n        label: \"Environment (indoor/outdoor)\",\n        fullWidth: true,\n        value: postData.environment,\n        onChange: e => setPostData({ ...postData,\n          environment: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"phone_type\",\n        variant: \"outlined\",\n        label: \"Phone type\",\n        fullWidth: true,\n        value: postData.phone_type,\n        onChange: e => setPostData({ ...postData,\n          phone_type: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"decibel\",\n        variant: \"outlined\",\n        label: \"Decibel Value\",\n        fullWidth: true,\n        value: postData.decibel,\n        onChange: e => setPostData({ ...postData,\n          decibel: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref2 => {\n            let {\n              base64\n            } = _ref2;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"3rqt8aB/mB7S+cyhAG9GHk+ieHk=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/alexgadanidis/Desktop/merging/capstoneUI/src/uploading/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","Accordion","AccordionActions","AccordionDetails","AccordionSummary","ExpandMoreIcon","useStyles","createPost","updatePost","Record","success","pos","crd","coords","console","log","latitude","longitude","error","err","Form","currentId","setCurrentId","postData","setPostData","location","message","environment","phone_type","decibel","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","clear","handleSubmit","e","preventDefault","name","result","paper","root","form","title","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["/*this file is correspsonded with the form in client/App.js\nthis page will set the form for the input fields\n*/\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { Accordion, AccordionActions,AccordionDetails,AccordionSummary } from '@mui/material';\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\nimport Record from '../Record/record'\n\n\nfunction success(pos){\n  var crd = pos.coords;\n  console.log('Your current position is:');\n  var latitude = crd.latitude;\n  var longitude = crd.longitude;\n  console.log(latitude);\n  console.log(longitude);\n}\nfunction error(err){\n  console.log(error);\n}\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ location: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  //if we try to update the post, make sure teh updated post information will be shown in the input filed, so we can change from the old materials\n  const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);//when the post actions changes, we excute this function \n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ location: '', message: '', environment: '', phone_type: '', decibel: '' , selectedFile: ''});\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    //if current Id is not null, then dispatch a update post \n    //otherwise if id is null, then we must be creating a post\n    if (currentId === null || currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to upload your own audios.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  //these are the input fields shows in the app.js, changing of these should also make corresponded change on Posts/Post/Post.js\n  return (\n    <Paper className={classes.paper}>\n      <Record/>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Modifying \"${post.title}\" Recording` : 'Upload a Recording'}</Typography>\n        \n        <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <TextField \n          //disabled\n          name=\"location\" \n          variant=\"outlined\" \n          label=\"location\" \n          fullWidth \n        />\n        </AccordionSummary>\n        <AccordionDetails>\n        <TextField \n            //required\n            variant=\"outlined\"\n            label=\"latitude\"\n            fullWidth\n          />\n          <TextField \n            //required\n            variant=\"outlined\"\n            label=\"longtitude\"\n            fullWidth\n          />\n        </AccordionDetails>\n      </Accordion>\n\n        <TextField \n          name=\"message\" \n          variant=\"outlined\" \n          label=\"Additional Information\" \n          fullWidth \n          multiline \n          rows={4} \n          value={postData.message} \n          onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n        />\n        <TextField \n          name=\"environment\" \n          variant=\"outlined\" \n          label=\"Environment (indoor/outdoor)\" \n          fullWidth \n          value={postData.environment} \n          onChange={(e) => setPostData({ ...postData, environment: e.target.value.split(',') })} \n        />\n        <TextField \n          name=\"phone_type\" \n          variant=\"outlined\" \n          label=\"Phone type\" \n          fullWidth value={postData.phone_type} \n          onChange={(e) => setPostData({ ...postData, phone_type: e.target.value })} \n        />\n        <TextField \n          name=\"decibel\" \n          variant=\"outlined\" \n          label=\"Decibel Value\" \n          fullWidth value={postData.decibel} \n          onChange={(e) => setPostData({ ...postData, decibel: e.target.value })} \n        />\n        \n        <div className={classes.fileInput}>\n            <FileBase \n                type=\"file\" \n                multiple={false} \n                onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} \n            />\n        </div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n      \n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}