{"ast":null,"code":"var _jsxFileName = \"/Users/ardlanwang/Documents/GitHub/capstoneUI/src/uploading/client/src/components/Record/record.js\";\nimport React from 'react';\nimport './record.css';\nimport MicRecorder from 'mic-recorder-to-mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mp3Recorder = new MicRecorder({\n  bitRate: 128\n});\n\nclass Record extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.start = () => {\n      if (window.navigator.geolocation) {\n        window.navigator.geolocation.getCurrentPosition(console.log, console.log);\n      }\n\n      if (this.state.isBlocked) {\n        console.log('Permission Denied');\n      } else {\n        Mp3Recorder.start().then(() => {\n          this.setState({\n            isRecording: true\n          });\n        }).catch(e => console.error(e));\n      }\n    };\n\n    this.stop = () => {\n      Mp3Recorder.stop().getMp3().then(_ref => {\n        let [buffer, blob] = _ref;\n        const blobURL = URL.createObjectURL(blob);\n        this.setState({\n          blobURL,\n          isRecording: false\n        });\n      }).catch(e => console.log(e));\n    };\n\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false\n    };\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia({\n      audio: true\n    }, () => {\n      console.log('Permission Granted');\n      this.setState({\n        isBlocked: false\n      });\n    }, () => {\n      console.log('Permission Denied');\n      this.setState({\n        isBlocked: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.start,\n          disabled: this.state.isRecording,\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.stop,\n          disabled: !this.state.isRecording,\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: this.state.blobURL,\n          controls: \"controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Record;","map":{"version":3,"sources":["/Users/ardlanwang/Documents/GitHub/capstoneUI/src/uploading/client/src/components/Record/record.js"],"names":["React","MicRecorder","Mp3Recorder","bitRate","Record","Component","constructor","props","start","window","navigator","geolocation","getCurrentPosition","console","log","state","isBlocked","then","setState","isRecording","catch","e","error","stop","getMp3","buffer","blob","blobURL","URL","createObjectURL","componentDidMount","getUserMedia","audio","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './record.css';\nimport MicRecorder from 'mic-recorder-to-mp3';\n\nconst Mp3Recorder = new MicRecorder({ bitRate: 128 });\n\nclass Record extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isRecording: false,\n      blobURL: '',\n      isBlocked: false,\n    };\n  }\n\n  start = () => {\n    if (window.navigator.geolocation) {\n      window.navigator.geolocation\n      .getCurrentPosition(console.log, console.log);\n     } \n    if (this.state.isBlocked) {\n      console.log('Permission Denied');\n    } else {\n      Mp3Recorder\n        .start()\n        .then(() => {\n          this.setState({ isRecording: true });\n        }).catch((e) => console.error(e));\n    }\n  };\n\n  stop = () => {\n    Mp3Recorder\n      .stop()\n      .getMp3()\n      .then(([buffer, blob]) => {\n        const blobURL = URL.createObjectURL(blob)\n        this.setState({ blobURL, isRecording: false });\n      }).catch((e) => console.log(e));\n  };\n\n  componentDidMount() {\n    navigator.getUserMedia({ audio: true },\n      () => {\n        console.log('Permission Granted');\n        this.setState({ isBlocked: false });\n      },\n      () => {\n        console.log('Permission Denied');\n        this.setState({ isBlocked: true })\n      },\n    );\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <button onClick={this.start} disabled={this.state.isRecording}>Record</button>\n          <button onClick={this.stop} disabled={!this.state.isRecording}>Stop</button>\n          <audio src={this.state.blobURL} controls=\"controls\" />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default Record;\n"]},"metadata":{},"sourceType":"module"}